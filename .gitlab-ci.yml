# Author: Daniel J.Mazure
# Date: 29.09.2021
# Description: GitLab CI configuration script.

# Tests over the FPGA set to manual temporarily until one specific machine is devoted 
# to that task.
#
# The CI/CD flow generates a bitstream both for Lagarto and Ariane. The synthesis and
# implementation scripts run by Vivado doesn't differentiate and search the dcp files
# in a general folder (./dcp). Files are moved in this script to create separate 
# artifacts for both implementations.
#
# More jobs can be created if we want to check different number of cores. It is currently
# set to a generic 2x2 configuration.
  
variables:
  GIT_SUBMODULE_STRATEGY: recursive
  FPGA_LOG_FILE: fpga.log
  BITSTREAM: system_${CI_PIPELINE_ID}.bit
  BOOT_SCRIPT: piton/tools/src/proto/alveou280/boot_linux.sh
  TOOLS_DIR: /home/fpga-runnerMEEP/tools/scripts
  QDMA_DRIVERS: /home/dmazure/git_repo/dma_ip_drivers/QDMA/linux-kernel/bin
  DESIGN_OPTIONS: "XTILES=2 YTILES=2"
  GOLDEN_MESSAGE: "Welcome to the Fedora/RISC-V disk image"
  ## Temp variables while lagarto+Fedora is developed
  GOLDEN_MESSAGE_LAGARTO: "io scheduler kyber registered" 
  OPENSBI_BIN: /home/dmazure/pcie/linux_images/osbi.bin
  BOOT_SCRIPT_LAGARTO: /home/dmazure/pcie/linux_images/boot_lagarto.sh
  DEPLOY_DIR: /home/fpga-runnerMEEP/ACME_deploy


.default_rules:
  rules:
    if: ($CI_COMMIT_BRANCH =~ /^production/ || $CI_COMMIT_MESSAGE =~ /^#CICDtest/ || $CI_PIPELINE_SOURCE == "schedule")

stages:
  - protosyn
  - implementation
  - bitstream
  - validation
  - fpga-test
  - deploy

###################################
# Synthesis
###################################

synthesis-ariane:
        stage: protosyn
        tags: 
            - MEEP_FPGA 
        rules:
            - !reference [.default_rules, rules]
        retry: 1
        timeout: 6h
        
        before_script:
            - export PITON_ROOT=`pwd`
            - mkdir -p ariane
              #- git submodule update --init --recursive
        script:
            - echo "ROOT= $PITON_ROOT"
            - source piton/ariane_setup.sh
            - make initialize CORE=ariane
            - echo "RISCV = $RISCV"
            - echo "VIVADO = $VIVADO_BIN"
            - make protosyn $DESIGN_OPTIONS CORE=ariane
        after_script:
            - cp -rf build/alveou280/system/protosyn_logs ariane           

        artifacts:
            when: always
            paths:        
                - ariane
                - dcp/synthesis.dcp

synthesis-lagarto:
        stage: protosyn
        tags:
            - MEEP_FPGA
        rules:
            - !reference [.default_rules, rules]
        retry: 1
        timeout: 6h        
        before_script:
            - export PITON_ROOT=`pwd`
            - mkdir -p lagarto
              #- git submodule update --init --recursive
        script:
            - echo "ROOT= $PITON_ROOT"
            - source piton/lagarto_setup.sh
            - make initialize CORE=lagarto
            - echo "RISCV = $RISCV"
            - echo "VIVADO = $VIVADO_BIN"
            - make protosyn $DESIGN_OPTIONS CORE=lagarto
        after_script:
            - mkdir -p lagarto
            - cp -rf build/alveou280/system/protosyn_logs lagarto

        artifacts:
            when: always
            paths:
                - lagarto
                - dcp/synthesis.dcp

###################################
# Implementation
###################################           

implementation-ariane:
        stage: implementation
        needs:
            - synthesis-ariane
        rules:
            - !reference [.default_rules, rules]
        timeout: 12h
        tags:
            - MEEP_FPGA
        before_script:
            - echo -e "Implementation stage"
            - echo -e "List dcps:"; ls dcp
        script:
            - make ci_implementation
        after_script:            
            - cp -rf reports ariane            
        dependencies:
            - synthesis-ariane

        artifacts:
            when: on_success
            expire_in: 20 days
            paths:
                - dcp/implementation.dcp
                - ariane/reports

implementation-lagarto:
        stage: implementation
        needs:
            - synthesis-lagarto
        rules:
            - !reference [.default_rules, rules]
        timeout: 12h
        tags:
            - MEEP_FPGA
        before_script:
            - echo -e "Implementation stage"
            - echo -e "List dcps:"; ls dcp
        script:
            - make ci_implementation
        after_script:            
            - cp -rf reports lagarto

        dependencies:
            - synthesis-lagarto

        artifacts:
            when: on_success
            expire_in: 20 days
            paths:
                - dcp/implementation.dcp
                - lagarto/reports

###################################
# Bitstream
###################################                 

bitstream-ariane:
        stage: bitstream
        needs:
            - synthesis-ariane
            - implementation-ariane
        rules:
            - !reference [.default_rules, rules]
        tags:
            - MEEP_FPGA
        before_script:
            - mkdir -p ariane/bitstream
            - echo -e "List dcps:"; ls dcp
        script:
            - make ci_bitstream
        after_script:
            - mv bitstream/*.bit ariane/bitstream/ariane_$BITSTREAM
        dependencies:
            - synthesis-ariane
            - implementation-ariane
        artifacts:
            when: always
            expire_in: 1 month
            paths:
                - ariane/bitstream

bitstream-lagarto:
        stage: bitstream
        needs:
            - synthesis-lagarto
            - implementation-lagarto
        rules:
            - !reference [.default_rules, rules]
        tags:
            - MEEP_FPGA
        before_script:            
            - mkdir -p lagarto/bitstream
            - echo -e "List dcps:"; ls dcp
        script:
            - make ci_bitstream
        after_script:
            - mv bitstream/*.bit lagarto/bitstream/lagarto_$BITSTREAM
        dependencies:
            - synthesis-lagarto
            - implementation-lagarto
        artifacts:
            when: always
            expire_in: 1 month
            paths:
                - lagarto/bitstream
                  
###################################
# Validation
###################################
                  
validation-ariane:
        stage: validation
        needs: 
            - implementation-ariane        
        rules:
            - !reference [.default_rules, rules]
        tags:
            - MEEP_FPGA
        before_script:            
            - cp -rf ariane/reports .
        script:
            - echo "Checking implementation reports ..."
            - source $TOOLS_DIR/check_reports.sh
        allow_failure: true
        dependencies:
            - implementation-ariane

validation-lagarto:
        stage: validation
        needs: 
            - implementation-lagarto        
        rules:
            - !reference [.default_rules, rules]
        tags:
            - MEEP_FPGA
        before_script:
            - cp -rf lagarto/reports .
        script:
            - echo "Checking implementation reports ..."
            - source $TOOLS_DIR/check_reports.sh
        allow_failure: true
        dependencies:
            - implementation-lagarto

###################################
# HW Test (Set to manual temporarily)
###################################              
                            
fpga-test-ariane:
        stage: fpga-test
        needs:
            - synthesis-ariane
            - implementation-ariane
            - bitstream-ariane        
        rules:
            - !reference [.default_rules, rules]
              #when: manual         
        retry: 2
        tags:
            - FPGA_TEST
        before_script:
            - export PATH=$PATH:$QDMA_DRIVERS
            - sudo $TOOLS_DIR/givememyuart
        script:
            - $TOOLS_DIR/load-bitstream.sh qdma ariane/bitstream/ariane_$BITSTREAM
            - source $BOOT_SCRIPT
            - source $TOOLS_DIR/fpga_test.sh $FPGA_LOG_FILE 
            - $TOOLS_DIR/check_fpga_log.sh $FPGA_LOG_FILE $GOLDEN_MESSAGE
        after_script:
            - cp $FPGA_LOG_FILE ariane
        dependencies:
            - bitstream-ariane
        artifacts:
            when: always
            paths:
                - ariane
                  
fpga-test-lagarto:
        stage: fpga-test
        needs:
            - synthesis-lagarto
            - implementation-lagarto
            - bitstream-lagarto  
        rules:
            - !reference [.default_rules, rules]
              #when: manual      
        retry: 2
        tags:
            - FPGA_TEST
        before_script:
            - export PATH=$PATH:$QDMA_DRIVERS
            - sudo $TOOLS_DIR/givememyuart
        script:
            - $TOOLS_DIR/load-bitstream.sh qdma lagarto/bitstream/lagarto_$BITSTREAM
            - source $BOOT_SCRIPT_LAGARTO $OPENSBI_BIN
            - source $TOOLS_DIR/fpga_test.sh $FPGA_LOG_FILE
            - $TOOLS_DIR/check_fpga_log.sh $FPGA_LOG_FILE $GOLDEN_MESSAGE_LAGARTO
        after_script:
            - cp $FPGA_LOG_FILE lagarto
        dependencies:
            - bitstream-lagarto
        artifacts:
            when: always
            paths:
                - lagarto

deploy-ariane:
        stage: deploy
        tags:
            - MEEP_FPGA
        rules:
            - !reference [.default_rules, rules]
        before_script:
            - mkdir -p $DEPLOY_DIR/ariane_$CI_COMMIT_SHORT_SHA            
        script:
            - cp -rf dcp $DEPLOY_DIR/ariane_$CI_COMMIT_SHORT_SHA
            - date >> $DEPLOY_DIR/ariane_$CI_COMMIT_SHORT_SHA/date.txt
            - cp -r ariane/* $DEPLOY_DIR/ariane_$CI_COMMIT_SHORT_SHA
            - echo "$CI_COMMIT_MESSAGE" >> $DEPLOY_DIR/ariane_$CI_COMMIT_SHORT_SHA/commit_message.txt
        needs:
            - synthesis-ariane
            - implementation-ariane
            - bitstream-ariane
            - fpga-test-ariane
        dependencies:
            - synthesis-ariane
            - implementation-ariane
            - bitstream-ariane
            - fpga-test-ariane

deploy-lagarto:
        stage: deploy
        tags:
            - MEEP_FPGA
        rules:
            - !reference [.default_rules, rules]
        before_script:
            - mkdir -p $DEPLOY_DIR/lagarto_$CI_COMMIT_SHORT_SHA            
        script:
            - cp -rf dcp $DEPLOY_DIR/lagarto_$CI_COMMIT_SHORT_SHA
            - date >> $DEPLOY_DIR/lagarto_$CI_COMMIT_SHORT_SHA/date.txt
            - cp -r lagarto/* $DEPLOY_DIR/lagarto_$CI_COMMIT_SHORT_SHA            
            - echo "$CI_COMMIT_MESSAGE" >> $DEPLOY_DIR/lagarto_$CI_COMMIT_SHORT_SHA/commit_message.txt
        needs:
            - synthesis-lagarto
            - implementation-lagarto
            - bitstream-lagarto
            - fpga-test-lagarto
        dependencies:
            - synthesis-lagarto
            - implementation-lagarto
            - bitstream-lagarto
            - fpga-test-lagarto

